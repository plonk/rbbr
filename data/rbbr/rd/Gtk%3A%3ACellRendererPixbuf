= class Gtk::CellRendererPixbuf
The Gtk::CellRendererPixbuf is used for rendering a cell to a Gdk::Drawable with Gdk::Pixbuf. 

== Object Hierarchy
* Object
  * GLib::Instantiatable
    * GLib::Object
      * Gtk::Object
        * Gtk::CellRenderer
          * Gtk::CellRendererPixbuf

== Class Methods
--- Gtk::CellRendererPixbuf.new
    Creates a new Gtk::CellRendererPixbuf. Adjust rendering parameters using object properties. Object properties can be set globally (with GLib::Object#set_property). Also, with Gtk::TreeViewColumn, you can bind a property to a value in a Gtk::TreeModel. For example, you can bind the "pixbuf" property on the cell renderer to a pixbuf value in the model, thus rendering a different image in each row of the Gtk::TreeView.
     * Returns : the new cell renderer

== Instance Methods
--- pixbuf
    Returns Gdk::Pixbuf.
    * Returns: Gdk::Pixbuf
    
--- pixbuf=(pixbuf)
    Sets the pixbuf of the Gtk::CellRendererPixbuf.
    * pixbuf: Gdk::Pixbuf
    * Returns: pixbuf

--- set_pixbuf(pixbuf)
    Same as pixbuf=.
    * pixbuf: Gdk::Pixbuf
    * Returns: self

--- pixbuf_expander_closed
    Returns the expander is closed or not.
    * Returns: true if closed.
    
--- pixbuf_expander_closed=(closed)
    Sets the expander is closed or not.
    * closed: true if closed.
    * Returns: closed

--- set_pixbuf_expander_closed(closed)
    Same as pixbuf_expander_closed=.
    * closed: true if closed.
    * Returns: self

--- pixbuf_expander_open
    Returns the expander is opened or not.
    * Returns: true or false
    
--- pixbuf_expander_open=(open)
    Sets the expander is opened or not.
    * open: true if opened.
    * Returns: open

--- set_pixbuf_expander_open(open)
    Same as pixbuf_expander_open=.
    * open: true if opened.
    * Returns: self

== Properties
--- pixbuf: Gdk::Pixbuf (Read/Write)
    The pixbuf to render

--- pixbuf-expander-closed: Gdk::Pixbuf (Read/Write)
    Pixbuf for closed expander

--- pixbuf-expander-open: Gdk::Pixbuf (Read/Write)
    Pixbuf for open expander

--- stock-detail: String (Read/Write)
    Render detail to pass to the theme engine

--- stock-id: String (Read/Write)
    The stock ID of the stock icon to render

--- stock-size: Integer (Read/Write)
    The size of the rendered icon

- ((<Masao>))
