= class Gtk::TreeRowReference

== Object Hierarchy
* Object
  * GLib::Boxed
    * Gtk::TreeRowReference

== Class Methods
--- Gtk::TreeRowReference.new(model, path)
    Creates a row reference based on path. This reference will keep pointing to the node pointed to by path, so long as it exists. It listens to all signals emitted by model, and updates it's path appropriately. If path isn't a valid path in model, then an error is occured.
    * model : A Gtk::TreeModel 
    * path : A valid Gtk::TreePath to monitor 
    * Returns : A new Gtk::TreeRowReference

--- Gtk::TreeRowReference.new(proxy, model, path)
    You do not need to use this method. 
    Creates a row reference based on path. This reference will keep pointing to the node pointed to by path, so long as it exists. If path isn't a valid path in model, then an error is occured. However, unlike references created with Gtk::RowReference.new, it does not listen to the model for changes. The creator of the row reference must do this explicitly using Gtk::TreeRowReference.inserted, Gtk::TreeRowReference.deleted, Gtk::TreeRowReference.reordered. This must be called once per signal per proxy.
    This type of row reference is primarily meant by structures that need to carefully monitor exactly when a row_reference updates itself, and is not generally needed by most applications.
    * proxy : A proxy GLib::Object 
    * model : A Gtk::TreeModel 
    * path : A valid Gtk::TreePath to monitor 
    * Returns : A new Gtk::TreeRowReference

--- Gtk::TreeRowReference.inserted(proxy, path)
    Lets a set of row reference created by Gtk::TreeRowReference.new(proxy, model, path) know that the model emitted the "row_inserted" signal.
    * proxy: A GLib::Object 
    * path: The row position that was inserted 
    * Returns: self

--- Gtk::TreeRowReference.deleted(proxy, path)
    Lets a set of row reference created by Gtk::TreeRowReference.new(proxy, model, path) know that the model emitted the "row_deleted" signal.
    * proxy: A GLib::Object 
    * path: The path position that was deleted 
    * Returns: self

--- Gtk::TreeRowReference.reordered(proxy, path, iter, new_orders)
    Lets a set of row reference created by Gtk::TreeRowReference.new(proxy, model, path) know that the model emitted the "rows_reordered" signal.
    * proxy: A GLib::Object 
    * path: The path position that was deleted 
    * iter: The iter pointing to the parent of the reordered 
    * new_orders: The new order of rows(Array)
    * Returns: self

== Instance Methods
--- path
    Returns a path that the row reference currently points to, or nil if the path pointed to is no longer valid.
    * Returns : A current path, or nil. 
--- valid?
    Returns true if the reference is non-nil and refers to a current valid path.
    * Returns: true if reference points to a valid path. 

== See Also
Gtk::TreeModel, Gtk::TreeView


- ((<Masao>))