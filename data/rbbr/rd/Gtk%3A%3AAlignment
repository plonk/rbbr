= class Gtk::Alignment
The Gtk::Alignment widget controls the alignment and size of its child widget. It has four settings: xscale, yscale, xalign, and yalign. 

The scale settings are used to specify how much the child widget should expand to fill the space allocated to the Gtk::Alignment. The values can range from 0 (meaning the child doesn't expand at all) to 1 (meaning the child expands to fill all of the available space). 

The align settings are used to place the child widget within the available area. The values range from 0 (top or left) to 1 (bottom or right). Of course, if the scale settings are both set to 1, the alignment settings have no effect. 

== Object Hierarchy
* Object
  * GLib::Instantiatable
    * GLib::Object
      * Gtk::Object
        * Gtk::Widget
          * Gtk::Container
            * Gtk::Bin
              * Gtk::Alignment

== Class Methods
--- Gtk::Alignment.new(xalign, yalixn, xscale, yscale)
    Creates a new Gtk::Alignment. 
    * xalign: the horizontal alignment of the child widget, from 0 (left) to 1 (right).  
    * yalign: the vertical alignment of the child widget, from 0 (top) to 1 (bottom).  
    * xscale: the amount that the child widget expands horizontally to fill up unused space, from 0 to 1. A value of 0 indicates that the child widget should never expand. A value of 1 indicates that the child widget will expand to fill all of the space allocated for the Gtk::Alignment.  
    * yscale: the amount that the child widget expands vertically to fill up unused space, from 0 to 1. The values are similar to xscale.  
    * Returns: a new Gtk::Alignment.

== Instance Methods
--- set(xalign, yalign, xscale, yscale)
    Sets the Gtk::Alignment values. 
    * xalign: the horizontal alignment of the child widget, from 0 (left) to 1 (right).  
    * yalign: the vertical alignment of the child widget, from 0 (top) to 1 (bottom).  
    * xscale: the amount that the child widget expands horizontally to fill up unused space, from 0 to 1. A value of 0 indicates that the child widget should never expand. A value of 1 indicates that the child widget will expand to fill all of the space allocated for the Gtk::Alignment.  
    * yscale: the amount that the child widget expands vertically to fill up unused space, from 0 to 1. The values are similar to xscale.  
    * Returns: self

--- xalign
    Returns the xalign value.
    * Returns: the xalign value

--- xalign=(xalign)
    Sets the xalign value.
    * xalign: xalign value
    * Returns: xalign

--- set_xalign(xalign)
    Same as xalign=.
    * xalign: xalign value
    * Returns: self

--- yalign
    Returns the yalign value.
    * Returns: yalign value

--- yalign=(yalign)
    Sets the yalign value.
    * yalign: yalign value
    * Returns: yalign

--- set_yalign(yalign)
    Same as yalign=.
    * yalign: yalign value
    * Returns: self

--- xscale
    Returns the xscale value.
    * Returns: the xscale value.

--- xscale=(xscale)
    Sets the xscale value.
    * xscale: xscale value
    * Returns: xscale

--- set_xscale(xscale)
    Same as xscale=.
    * xscale: xscale value
    * Returns: self

--- yscale
    Returns the yscale value.
    * Returns: the yscale value.

--- yscale=(yscale)
    Sets the xscale value.
    * yscale: yscale value
    * Returns: yscale

--- set_yscale(yscale)
    Same as yscale=.
    * yscale: yscale value
    * Returns: self

== Properties
--- xalign: Float (Read/Write)
    Horizontal position of child in available space. 0.0 is left aligned, 1.0 is right aligned

--- xscale: Float (Read/Write)
    If available horizontal space is bigger than needed for the child, how much of it to use for the child. 0.0 means none, 1.0 means all

--- yalign: Float (Read/Write)
    Vertical position of child in available space. 0.0 is top aligned, 1.0 is bottom aligned

--- yscale: Float (Read/Write)
    If available vertical space is bigger than needed for the child, how much of it to use for the child. 0.0 means none, 1.0 means all

- ((<Masao>))